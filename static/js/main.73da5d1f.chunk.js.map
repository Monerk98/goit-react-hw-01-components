{"version":3,"sources":["components/Profile/Static/userMain.module.css","components/Transaction/Transact.module.css","components/Friends/Friend/Friend.module.css","components/Statistics/Static.module.css","components/Friends/FriendsList.module.css","components/Profile/Profile.module.css","components/Friends/Friend/Friend.jsx","components/Friends/FriendsList.jsx","components/Profile/Static/userMain.jsx","components/Profile/name.js","components/Profile/Profile.jsx","components/Statistics/Static.jsx","components/Statistics/random.js","components/Transaction/Transact.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Friend","avatar","isOnline","name","className","s","item","online","offline","src","alt","width","FriendsList","items","c","container","map","id","Dialog","tag","location","stats","profile","description","list","wrap","label","quantity","followers","views","likes","nameElements","d","Profile","props","wrapper","Static","title","statistics","statList","percentage","style","backgroundColor","Math","floor","random","History","transactionHistory","transaction","tr","th","type","amount","currency","td","App","fr","data","hist","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73da5d1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"userMain_wrapper__3OvKm\",\"name\":\"userMain_name__jO_uU\",\"avatar\":\"userMain_avatar__2-KVk\",\"description\":\"userMain_description__3abDP\",\"list\":\"userMain_list__1xOuJ\",\"stats\":\"userMain_stats__1oA42\",\"wrap\":\"userMain_wrap__13ia2\",\"label\":\"userMain_label__2bEOn\",\"quantity\":\"userMain_quantity__2rkws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"Transact_transaction__2DU3W\",\"tr\":\"Transact_tr__208CS\",\"td\":\"Transact_td__1PDlU\",\"th\":\"Transact_th__2VL4w\",\"transactionHistory\":\"Transact_transactionHistory__1PEgj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__2z2a0\",\"avatar\":\"Friend_avatar__3YRfG\",\"online\":\"Friend_online__3USpz\",\"offline\":\"Friend_offline__3OOjF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Static_statistics__oX-y9\",\"statList\":\"Static_statList__1nyZv\",\"item\":\"Static_item__1e4AJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendsList_container__1VEPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__2pPwA\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Friend.module.css\";\r\n\r\nconst Friend = ({ avatar, isOnline, name }) => {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={isOnline ? s.online : s.offline}></span>\r\n      <img className={s.avatar} src={avatar} alt=\"User avatar\" width=\"48\" />\r\n      <p className={s.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\nFriend.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\nexport default Friend;\r\n","import Friend from \"./Friend/Friend\";\r\nimport PropTypes from \"prop-types\";\r\nimport c from \"./FriendsList.module.css\";\r\n\r\nconst FriendsList = ({ items }) => {\r\n  return (\r\n    <ul className={c.container}>\r\n      {items.map((item) => (\r\n        <Friend\r\n          key={item.id}\r\n          avatar={item.avatar}\r\n          isOnline={item.isOnline}\r\n          name={item.name}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendsList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default FriendsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport c from \"./userMain.module.css\";\r\n\r\nconst Dialog = ({ avatar, name, tag, location, stats }) => {\r\n  return (\r\n    <div className={c.profile}>\r\n      <div className={c.description}>\r\n        <img src={avatar} alt=\"User avatar\" className={c.avatar} />\r\n        <p className={c.name}>{name}</p>\r\n        <p className={c.tag}>{tag}</p>\r\n        <p className={c.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={`${c.stats} ${c.list}`}>\r\n        <li className={c.wrap}>\r\n          <span className={c.label}>Followers</span>\r\n          <span className={c.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={c.wrap}>\r\n          <span className={c.label}>Views</span>\r\n          <span className={c.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={c.wrap}>\r\n          <span className={c.label}>Likes</span>\r\n          <span className={c.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDialog.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\nexport default Dialog;\r\n","import React from \"react\";\r\nimport User from \"./Static/userMain\";\r\nimport userData from \"./user.json\";\r\n\r\nlet nameElements = userData.map((d) => {\r\n  return (\r\n    <User\r\n      key={d.id}\r\n      name={d.name}\r\n      tag={d.tag}\r\n      location={d.location}\r\n      avatar={d.avatar}\r\n      stats={d.stats}\r\n    />\r\n  );\r\n});\r\n\r\nexport default nameElements;\r\n","import React from \"react\";\r\nimport c from \"./Profile.module.css\";\r\nimport nameElements from \"./name\";\r\n\r\nconst Profile = (props) => {\r\n  return <div className={c.wrapper}>{nameElements}</div>;\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport s from \"./Static.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport color from \"./random\";\r\n\r\nconst Static = ({ title, stats }) => {\r\n  return (\r\n    <section className={s.statistics}>\r\n      <h2 className=\"title\">{title}</h2>\r\n\r\n      <ul className={s.statList}>\r\n        {stats.map(({ id, label, percentage }) => {\r\n          return (\r\n            <li\r\n              className={s.item}\r\n              key={id}\r\n              style={{ backgroundColor: color() }}\r\n            >\r\n              <span className={s.label}>{label}</span>\r\n              <span className={s.percentage}>{percentage}</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatic.propTypes = {\r\n  id: PropTypes.string,\r\n  label: PropTypes.string,\r\n  percentage: PropTypes.number,\r\n  static: PropTypes.array,\r\n};\r\n\r\nexport default Static;\r\n","export default function getRandomRGB() {\r\n  return `rgb(${Math.floor(Math.random() * 235)}, ${Math.floor(\r\n    Math.random() * 235\r\n  )}, ${Math.floor(Math.random() * 235)})`;\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Transact.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst History = ({ items }) => {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead className={s.transaction}>\r\n        <tr className={s.tr}>\r\n          <th className={s.th}>Type</th>\r\n          <th className={s.th}>Amount</th>\r\n          <th className={s.th}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => {\r\n          return (\r\n            <tr className={s.tr} key={id}>\r\n              <td className={s.td}>{type}</td>\r\n              <td className={s.td}>{amount}</td>\r\n              <td className={s.td}>{currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nHistory.propTypes = {\r\n  id: PropTypes.number,\r\n  type: PropTypes.string,\r\n  amount: PropTypes.number,\r\n  currency: PropTypes.string,\r\n  items: PropTypes.array,\r\n};\r\n\r\nexport default History;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport FriendsList from \"./components/Friends/FriendsList\";\nimport Profile from \"./components/Profile/Profile\";\nimport Static from \"./components/Statistics/Static\";\nimport History from \"./components/Transaction/Transact\";\n\nimport data from \"./components/Statistics/data.json\";\nimport fr from \"./components/Friends/fr.json\";\nimport hist from \"./components/Transaction/transHistory.json\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile />\n      <FriendsList items={fr} />\n      <Static title=\"Upload stats\" stats={data} />\n      <History items={hist} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}